import java.io.IOException;public class Cesar {    /**     * Функция шифрования     * @param s строка которую надо зашифровать     * @return возврат зашифрованной строки     * @throws IOException     */    public String encrypt(String s) throws IOException {        StringBuilder sb = new StringBuilder();        for (int i = 0; i < s.length(); i++) {            byte t = s.getBytes("CP1251")[i];            int t1 = t + set;            t1 = t1 % 256;            sb.append(new String(new byte[]{(byte) (t1)}, "CP1251"));        }        return sb.toString();    }    /**     * Функция расшифровки     * @param s строка текста     * @return возвращение расшифрованной строки     * @throws IOException     */    public String decrypt(String s) throws IOException {        StringBuilder sb = new StringBuilder();        for (int i = 0; i < s.length(); i++) {            byte t = s.getBytes("CP1251")[i];            int t1 = t - set;            t1 = t1 % 256;            sb.append(new String(new byte[]{(byte) (t1)}, "CP1251"));        }        return sb.toString();    }    /**     * Возвращение ключа     * @return возвращает set     */    public int getSet() {        return set;    }    /**     * Задает ключ     * @param set1 ключ     * @return если входит в промежуток, то запоминаем, если нет, то нет     */    public boolean setSet (int set1)    {        if (set1>0 && set1<256) {            this.set = set1;            return true;        }        return false;    }    private int set;    /**     * конструктор     */    public Cesar() {        this.set = -1;    }    /**     * set private !=0     * доступ к нему     * еще переменную которая выбир способ шифр     * и конструктор где все это инициализ     */}